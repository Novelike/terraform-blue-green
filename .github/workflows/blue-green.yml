# .github/workflows/blue-green.yml
name: Blue-Green Deploy

on:
  push:
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/blue-green.yml'
      - 'terraform/**'

jobs:
  ensure-infra:
    name: Ensure Infra (Terraform Apply)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    env:
      TF_VAR_username:    ${{ secrets.TF_VAR_USERNAME }}
      TF_VAR_password:    ${{ secrets.TF_VAR_PASSWORD }}
      TF_VAR_tenant_name: ${{ secrets.TF_VAR_TENANT_NAME }}
      TF_VAR_region:      ${{ secrets.TF_VAR_REGION }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - run: terraform init -input=false
      - run: terraform apply -auto-approve -input=false

  deploy:
    name: Deploy App (Blue-Green)
    needs: ensure-infra
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      SSH_KEY:             ${{ secrets.SSH_KEY }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v3

      - name: Determine Active & Next Env
        id: determine-env
        run: |
          set +e
          VIP=$(terraform -chdir=terraform output -raw lb_vip 2>/dev/null)
          echo "LB_VIP=$VIP" >> $GITHUB_ENV
          if curl -fs http://$VIP/hello; then
            echo "NEXT_ENV=green" >> $GITHUB_ENV
          else
            echo "NEXT_ENV=blue"  >> $GITHUB_ENV
          fi
          set -e

      - name: Set target HOST
        run: |
          if [ "${{ env.NEXT_ENV }}" = "blue" ]; then
            echo "HOST=$(terraform -chdir=terraform output -raw blue_ip)" >> $GITHUB_ENV
          else
            echo "HOST=$(terraform -chdir=terraform output -raw green_ip)" >> $GITHUB_ENV
          fi

      - name: Deploy to ${{ env.NEXT_ENV }}
        uses: appleboy/ssh-action@v0.1.6
        with:
          host:       ${{ env.HOST }}
          username:   ubuntu
          key:        ${{ env.SSH_KEY }}
          script: |
            cd /opt/app
            git pull
            . venv/bin/activate
            pip install -r requirements.txt
            echo "$(date)" > /opt/deploy_timestamp.txt
            pkill -f "uvicorn app.main"
            nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 &

      - name: Switch LB to ${{ env.NEXT_ENV }}
        run: terraform -chdir=terraform apply -auto-approve \
              -var="active_env=${{ env.NEXT_ENV }}"

      - name: Notify Success to Discord
        if: ${{ success() }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d "{\"content\":\"✅ Deploy to `${{ env.NEXT_ENV }}` succeeded!\"}" \
            ${{ env.DISCORD_WEBHOOK_URL }}

      - name: Notify Failure to Discord
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d "{\"content\":\"❌ Deploy to `${{ env.NEXT_ENV }}` failed! Check logs.\"}" \
            ${{ env.DISCORD_WEBHOOK_URL }}

