# .github/workflows/blue-green.yml
name: Terraform + Blue-Green Deploy

on:
  push:
    paths:
      - 'app/**'             # FastAPI ì•± ì†ŒìŠ¤ê°€ ë°”ë€” ë•Œë§Œ
      - 'backend/**'
      - 'github/workflows/blue_green.yml'
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      TF_VAR_username:       ${{ secrets.TF_VAR_USERNAME }}
      TF_VAR_password:       ${{ secrets.TF_VAR_PASSWORD }}
      TF_VAR_tenant_name:    ${{ secrets.TF_VAR_TENANT_NAME }}
      TF_VAR_region:         ${{ secrets.TF_VAR_REGION }}
      SSH_KEY:               ${{ secrets.SSH_KEY }}
      DISCORD_WEBHOOK_URL:   ${{ secrets.DISCORD_WEBHOOK_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Extract Outputs
        working-directory: terraform
        run: |
          echo "LB_VIP=$(terraform output -raw lb_vip)"    >> $GITHUB_ENV
          echo "BLUE_IP=$(terraform output -raw blue_ip)"  >> $GITHUB_ENV
          echo "GREEN_IP=$(terraform output -raw green_ip)">> $GITHUB_ENV

      - name: Determine Next Env
        id: determine
        run: |
          set +e
          curl -fs http://${{ env.LB_VIP }}/hello
          if [ $? -eq 0 ]; then
            echo "NEXT_ENV=green" >> $GITHUB_ENV
          else
            echo "NEXT_ENV=blue"  >> $GITHUB_ENV
          fi
          set -e

      - name: Deploy to Next Env
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.NEXT_ENV == 'blue' && env.BLUE_IP || env.GREEN_IP }}
          username: ubuntu
          key: ${{ env.SSH_KEY }}
          script: |
            cd /opt/app
            git pull
            . venv/bin/activate
            pip install -r requirements.txt
            echo "$(date)" > /opt/deploy_timestamp.txt
            pkill -f "uvicorn app.main"
            nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 &

      - name: Health Check
        run: |
          for i in {1..5}; do
            if curl -fs http://${{ env.LB_VIP }}/hello; then
              exit 0
            fi
            sleep 5
          done
          exit 1

      - name: Switch Traffic
        if: success()
        working-directory: terraform
        run: terraform apply -auto-approve -var="active_env=${{ env.NEXT_ENV }}"

      - name: Notify Discord
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            CONTENT="âœ… Deployed to **${{ env.NEXT_ENV }}** succeeded! LB VIP: ${{ env.LB_VIP }}"
          else
            CONTENT="ðŸš¨ Deployment to **${{ env.NEXT_ENV }}** failed! Check logs."
          fi
          curl -H "Content-Type: application/json" \
               -d "{\"content\":\"$CONTENT\"}" \
               ${{ env.DISCORD_WEBHOOK_URL }}

